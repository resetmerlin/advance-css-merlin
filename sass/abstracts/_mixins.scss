@mixin clearfix {
    &::after{
        content: "";
        display: table;
        //standard version of the clearfix

        //this clearfix is the clear property. 
        //this would clear both floats, so float left and float right so that 
        //it's gonna work no matter if we use flat left or float right

        clear: both;



    }
}

//we always need to specify the content property otherwise a pseudo element
// will simply not appeat on the page, and we want it empty


@mixin absCenter{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}


// MEDIA QUERY MANAGER


/*
0 - 600px: Phone
600 - 900px: Tablet portrait
900 - 1200px: Tablet landscae
[1200-1800] is where our normal styles apply
1800px + : Big desktop




*/


@mixin respond-phone {
    @media(max-width:600px){
        // So, the content.

        // This basically allows us to parse

        // a block of code into a mixing.
        @content
    };
    
}
/*
$breakpoint argument choices
-phone
-tab-port
-tab-land
-big-desktop
*/

@mixin respond($breakpoint){
        @if $breakpoint == phone{
            @media(max-width:37.5em){ //600px

                @content
            };
        }
        @if $breakpoint == tab-port{
            @media(max-width:56.25em){ //900px

                @content
            };
        }

        @if $breakpoint == tab-land{
            @media(max-width:75em){ //1200px

                @content
            };
        }

        @if $breakpoint == big-desktop{
            @media(min-width:112.5em){ //1800px

                @content
            };
        }

        // we're going to include it, and we will parse a breakpoint.

        // If that breakpoint that we parse in here is called phone,

        // then what we want to happen is this.

        // What we want to happen is this exact media query
        }